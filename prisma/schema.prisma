generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  avatar    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  chats     Chat[]
  messages  Message[]
  settings  UserSettings?
  globalMemory GlobalMemory[]
}

model Chat {
  id        String    @id @default(cuid())
  title     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  userId    String?
  user      User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages  Message[]

  isDeleted Boolean   @default(false)
}

enum Role {
  USER
  ASSISTANT
}

model Message {
  id        String   @id @default(cuid())
  role      Role     @default(USER)
  content   String
  createdAt DateTime @default(now())
  chatId    String
  chat      Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)
  userId    String?
  user      User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model UserSettings {
  id          String   @id @default(cuid())
  userId      String   @unique
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  jobTitle    String?
  occupation  String?
  bio         String?
  location    String?
  company     String?
  website     String?
  customFont  String?
  theme       String   @default("system")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
} 

model GlobalMemory {
  id         String   @id @default(cuid())
  content    String
  category   String?  // personal, professional, preferences, knowledge, other
  importance Int      @default(5) // 1-10 scale
  reasoning  String?  // Why this memory is important
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  isDeleted  Boolean  @default(false)
  userId     String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, importance])
  @@index([userId, category])
}